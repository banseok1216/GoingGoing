plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    group = rootProject.group
    version = rootProject.version

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        implementation 'org.projectlombok:lombok:1.18.30'
        implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0-rc1'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
        implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.25.2'
        implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    }
    sonar {
        properties {
            property 'sonar.java.binaries', 'build/classes/java/main'
            property 'sonar.projectKey', 'goinggoing'
            property 'sonar.projectName', 'GoingGoing'
            property 'sonar.host.url', 'http://localhost:9000'
            property 'sonar.language', 'java'
            property 'sonar.sourceEncoding', 'UTF-8'
            property 'sonar.token', 'sqp_72136e9c889c4e4f8f4bcde91b24770ca5de4c0a'
            property 'sonar.gradle.skipCompile', 'true'
            property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco.xml'
            property 'sonar.exclusions', '**/config/**'
            property "sonar.exclusions", "**/KafkaFcmProto.java"
        }
    }

    jacocoTestReport {
        dependsOn tasks.test
        reports {
            xml.required = true
            html.required = true
            xml.destination(new File("build/reports/jacoco.xml"))
        }
    }

    test {
        useJUnitPlatform()
    }
}
